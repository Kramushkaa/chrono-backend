import TelegramBot from 'node-telegram-bot-api';

export class TelegramService {
  private bot: TelegramBot | null = null;
  private adminChatId: string;
  private isEnabled: boolean = false;

  constructor(botToken?: string, adminChatId?: string) {
    this.adminChatId = adminChatId || '';

    if (botToken && adminChatId) {
      try {
        this.bot = new TelegramBot(botToken, { polling: false });
        this.isEnabled = true;
        console.log('‚úÖ Telegram notifications service initialized');
      } catch (error) {
        console.warn('‚ö†Ô∏è  Telegram service initialization failed:', error);
        this.isEnabled = false;
      }
    } else {
      console.warn('‚ö†Ô∏è  Telegram notifications disabled: missing token or chat ID');
    }
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   */
  async notifyNewRegistration(userEmail: string, username?: string, fullName?: string): Promise<void> {
    if (!this.isEnabled || !this.bot) return;

    const displayName = fullName || username || userEmail;
    const usernameText = username ? `\nüë§ Username: ${username}` : '';
    const fullNameText = fullName ? `\nüìù –ò–º—è: ${fullName}` : '';

    const message = `
üéâ <b>–ù–æ–≤–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è!</b>

üìß Email: ${userEmail}${usernameText}${fullNameText}

‚è∞ ${new Date().toLocaleString('ru-RU', { timeZone: 'Europe/Moscow' })}
`.trim();

    try {
      await this.bot.sendMessage(this.adminChatId, message, { parse_mode: 'HTML' });
      console.log(`‚úÖ Telegram notification sent: new registration (${userEmail})`);
    } catch (error) {
      console.error('‚ùå Failed to send Telegram notification (registration):', error);
    }
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–∏—Å—å–º–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è email
   */
  async notifyVerificationEmailSent(userEmail: string, isResend: boolean = false): Promise<void> {
    if (!this.isEnabled || !this.bot) return;

    const action = isResend ? '–ü–æ–≤—Ç–æ—Ä–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞' : '–û—Ç–ø—Ä–∞–≤–∫–∞';
    const emoji = isResend ? 'üîÑ' : 'üì®';

    const message = `
${emoji} <b>${action} –ø–∏—Å—å–º–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è</b>

üìß Email: ${userEmail}

‚è∞ ${new Date().toLocaleString('ru-RU', { timeZone: 'Europe/Moscow' })}
`.trim();

    try {
      await this.bot.sendMessage(this.adminChatId, message, { parse_mode: 'HTML' });
      console.log(`‚úÖ Telegram notification sent: verification email (${userEmail})`);
    } catch (error) {
      console.error('‚ùå Failed to send Telegram notification (verification email):', error);
    }
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ email
   */
  async notifyEmailVerified(userEmail: string, username?: string): Promise<void> {
    if (!this.isEnabled || !this.bot) return;

    const displayName = username || userEmail;
    const usernameText = username ? `\nüë§ Username: ${username}` : '';

    const message = `
‚úÖ <b>Email –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω!</b>

üìß Email: ${userEmail}${usernameText}

‚è∞ ${new Date().toLocaleString('ru-RU', { timeZone: 'Europe/Moscow' })}
`.trim();

    try {
      await this.bot.sendMessage(this.adminChatId, message, { parse_mode: 'HTML' });
      console.log(`‚úÖ Telegram notification sent: email verified (${userEmail})`);
    } catch (error) {
      console.error('‚ùå Failed to send Telegram notification (email verified):', error);
    }
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
   */
  async sendTestMessage(): Promise<void> {
    if (!this.isEnabled || !this.bot) {
      console.warn('‚ö†Ô∏è  Telegram service is not enabled');
      return;
    }

    const message = `
ü§ñ <b>–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ</b>

Telegram notifications —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!

‚è∞ ${new Date().toLocaleString('ru-RU', { timeZone: 'Europe/Moscow' })}
`.trim();

    try {
      await this.bot.sendMessage(this.adminChatId, message, { parse_mode: 'HTML' });
      console.log('‚úÖ Test Telegram message sent successfully');
    } catch (error) {
      console.error('‚ùå Failed to send test Telegram message:', error);
      throw error;
    }
  }
}

